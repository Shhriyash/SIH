{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/takza/OneDrive/Desktop/Devlopment/React/daakmadaad/app/Pincode/page.js"],"sourcesContent":["'use client'\r\n\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Link from 'next/link'\r\n\r\nconst statesAndUTs = [\r\n  \"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\",\r\n  \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\",\r\n  \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\",\r\n  \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\",\r\n  \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\",\r\n  \"Andaman and Nicobar Islands\", \"Chandigarh\", \r\n  \"Dadra and Nagar Haveli and Daman and Diu\", \"Delhi\", \"Jammu and Kashmir\",\r\n  \"Ladakh\", \"Lakshadweep\", \"Puducherry\"\r\n]\r\n\r\nexport default function PincodePage() {\r\n  const [state, setState] = useState('')\r\n  const [city, setCity] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [postOffice, setPostOffice] = useState('')\r\n  const [pincode, setPincode] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setError('')\r\n    setPincode('')\r\n    setIsLoading(true)\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https: //api.postalpincode.in/postoffice/${address}`\r\n      )\r\n\r\n      const postOffices = response.data[0]?.PostOffice\r\n\r\n      if (postOffices) {\r\n        const matchingOffice = postOffices.find(\r\n          (office) =>\r\n            office.State.toLowerCase() === state.toLowerCase() &&\r\n            (office.District.toLowerCase() === city.toLowerCase() ||\r\n             office.Name.toLowerCase() === postOffice.toLowerCase() ||\r\n             office.DeliveryStatus.toLowerCase().includes(address.toLowerCase()))\r\n        )\r\n\r\n        if (matchingOffice) {\r\n          setPincode(matchingOffice.Pincode)\r\n        } else {\r\n          setError('No matching Pincode found for the given details.')\r\n        }\r\n      } else {\r\n        setError('Invalid address or no data found.')\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching data. Please try again.')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setState('')\r\n    setCity('')\r\n    setAddress('')\r\n    setPostOffice('')\r\n    setPincode('')\r\n    setError('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"bg-white border-b\">\r\n        <div className=\"container mx-auto px-4 py-2\">\r\n          <p className=\"text-sm\">\r\n            You are here: <Link href=\"/\" className=\"text-blue-600 hover:underline\">Home</Link> {'>'} Find Pin Code\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container mx-auto px-4 py-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-[250px_1fr] gap-6\">\r\n          <aside className=\"space-y-4\">\r\n            <nav className=\"space-y-1\">\r\n              <Link href=\"/\" className=\"block px-4 py-2 text-sm hover:bg-gray-100 rounded-md\">Home</Link>\r\n              <Link href=\"/pincode\" className=\"block px-4 py-2 text-sm hover:bg-gray-100 rounded-md font-medium bg-gray-100\">Find Pin Code</Link>\r\n            </nav>\r\n          </aside>\r\n          <div className=\"bg-white p-6 shadow-lg rounded-lg\">\r\n            <h1 className=\"text-3xl font-bold mb-4\">Find Pincode</h1>\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              <div className=\"space-y-4\">\r\n                <p className=\"text-sm\">* Indicates a required field.</p>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"state\" className=\"block text-sm font-medium text-gray-700\">\r\n                    State / Union Territory <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <select\r\n                    id=\"state\"\r\n                    value={state}\r\n                    onChange={(e) => setState(e.target.value)}\r\n                    className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select a state</option>\r\n                    {statesAndUTs.map((state) => (\r\n                      <option key={state} value={state}>{state}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\r\n                    City / District <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    id=\"city\"\r\n                    type=\"text\"\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Address\r\n                  </label>\r\n                  <input\r\n                    id=\"address\"\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"text-center font-medium\">OR</div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <label htmlFor=\"postOffice\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Post Office Name\r\n                  </label>\r\n                  <input\r\n                    id=\"postOffice\"\r\n                    type=\"text\"\r\n                    value={postOffice}\r\n                    onChange={(e) => setPostOffice(e.target.value)}\r\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex gap-4 justify-end\">\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                  className=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n                >\r\n                  {isLoading ? 'Searching...' : 'Search'}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleReset}\r\n                  className=\"px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            {pincode && (\r\n              <div className=\"mt-4 p-4 bg-green-100 border border-green-400 text-green-700 rounded\">\r\n                Pincode: {pincode}\r\n              </div>\r\n            )}\r\n            \r\n            {error && (\r\n              <div className=\"mt-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                {error}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}